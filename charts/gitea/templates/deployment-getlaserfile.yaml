{{ if .Values.getlaserfile.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: getlaserfile
spec:
  {{- if not .Values.getlaserfile.autoscaling.enabled }}
  replicas: {{ .Values.getlaserfile.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: getlaserfile
  template:
    metadata:
      {{- with .Values.getlaserfile.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: getlaserfile
    spec:
      {{- with .Values.getlaserfile.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.getlaserfile.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-getlaserfile
          {{- if .Values.getlaserfile.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.getlaserfile.command "context" $) | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.getlaserfile.securityContext | nindent 12 }}
          image: "{{ .Values.getlaserfile.image.repository }}:{{ .Values.getlaserfile.image.tag }}"
          imagePullPolicy: {{ .Values.getlaserfile.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.getlaserfile.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.getlaserfile.resources | nindent 12 }}
          {{- if .Values.getlaserfile.probe.enabled }}
          livenessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.getlaserfile.service.port }}
            failureThreshold: 1
            initialDelaySeconds: 30
            periodSeconds: 10
          {{- end }}
          env:
            - name: CONFIGLOCATION
              value: /etc/getlaserfile/config.yaml
            - name: PORT
              value: {{ .Values.getlaserfile.service.port | quote }}
          volumeMounts:
            - name: repo
              mountPath: /repo
            - name: getlaserfile-config
              mountPath: /etc/getlaserfile
      volumes:
      - name: repo
        persistentVolumeClaim:
            claimName: gitea
      - name: getlaserfile-config
        configMap:
          name: getlaserfile-configmap
          items:
          - key: config.yaml
            path: config.yaml
      {{- with .Values.getlaserfile.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.getlaserfile.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.getlaserfile.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}