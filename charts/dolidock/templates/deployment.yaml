apiVersion: apps/v1
kind: Deployment
metadata:
  name: smtpd
  labels:
    io.kompose.service: smtpd
  {{- include "dolidock.labels" . | nindent 4 }}
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
spec:
  replicas: {{ .Values.smtpd.replicas }}
  selector:
    matchLabels:
      io.kompose.service: smtpd
    {{- include "dolidock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/dolidock-default: "true"
        io.kompose.service: smtpd
      {{- include "dolidock.selectorLabels" . | nindent 8 }}
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
        kompose.version: 1.28.0 (c4137012e)
    spec:
      containers:
      - env:
        - name: ALLOWED_SENDER_DOMAINS
          valueFrom:
            secretKeyRef:
              key: ALLOWED_SENDER_DOMAINS
              name: dolistock
        - name: DKIM_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: DKIM_PRIVATE_KEY
              name: dolistock
        - name: DKIM_SELECTOR
          valueFrom:
            secretKeyRef:
              key: DKIM_SELECTOR
              name: dolistock
        - name: CLOUDFLARE_ZONE_ID
          valueFrom:
            secretKeyRef:
              key: CLOUDFLARE_ZONE_ID
              name: dolistock
        - name: CLOUDFLARE_API_KEY
          valueFrom:
            secretKeyRef:
              key: CLOUDFLARE_API_KEY
              name: dolistock
        - name: CLOUDFLARE_DNS_RECORDS
          valueFrom:
            secretKeyRef:
              key: CLOUDFLARE_DNS_RECORDS
              name: dolistock
        - name: POSTFIX_HOSTNAME
          valueFrom:
            secretKeyRef:
              key: POSTFIX_HOSTNAME
              name: dolistock
        - name: POSTFIX_myhostname
          valueFrom:
            secretKeyRef:
              key: POSTFIX_myhostname
              name: dolistock
        - name: POSTFIX_helo_name
          valueFrom:
            secretKeyRef:
              key: POSTFIX_helo_name
              name: dolistock
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.smtpd.smtpd.image.repository }}:{{ .Values.smtpd.smtpd.image.tag | default .Chart.AppVersion }}
        name: smtpd
        ports:
        - containerPort: 25
        resources: {{- toYaml .Values.smtpd.smtpd.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /var/www/dolidock
          name: {{ if (default .Values.smtpd.useDolidockPVC) }}dolidock-data{{ else }}smtpd-data{{ end }}
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      restartPolicy: Always
      volumes:
      - name: {{ if (default .Values.smtpd.useDolidockPVC) }}dolidock-data{{ else }}smtpd-data{{ end }}
        persistentVolumeClaim:
          claimName: {{ if (default .Values.smtpd.useDolidockPVC) }}dolidock-data{{ else }}smtpd-data{{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    io.kompose.service: mysql
  {{- include "dolidock.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.mysql.replicas }}
  selector:
    matchLabels:
      io.kompose.service: mysql
    {{- include "dolidock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/dolidock-default: "true"
        io.kompose.service: mysql
      {{- include "dolidock.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_ROOT_PASSWORD
              name: dolistock
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: MYSQL_DATABASE
              name: dolistock
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: MYSQL_USER
              name: dolistock
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: dolistock
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.mysql.mysql.image.repository }}:{{ .Values.mysql.mysql.image.tag
          | default .Chart.AppVersion }}
        name: mysql
        ports:
        - containerPort: 3306
        resources: {{- toYaml .Values.mysql.mysql.resources | nindent 10 }}
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      restartPolicy: Always
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dolidock
  labels:
    io.kompose.service: dolidock
  {{- include "dolidock.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.dolidock.replicas }}
  selector:
    matchLabels:
      io.kompose.service: dolidock
    {{- include "dolidock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/dolidock-default: "true"
        io.kompose.service: dolidock
      {{- include "dolidock.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: DOLI_ADMIN_LOGIN
          valueFrom:
            secretKeyRef:
              key: DOLI_ADMIN_LOGIN
              name: dolistock
        - name: DOLI_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DOLI_ADMIN_PASSWORD
              name: dolistock
        - name: DOLI_DB_NAME
          valueFrom:
            secretKeyRef:
              key: DOLI_DB_NAME
              name: dolistock
        - name: DOLI_DB_USER
          valueFrom:
            secretKeyRef:
              key: DOLI_DB_USER
              name: dolistock
        - name: DOLI_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DOLI_DB_PASSWORD
              name: dolistock
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_ROOT_PASSWORD
              name: dolistock
        - name: DOLI_DB_TYPE
          value: {{ .Values.dolidock.dolidock.doliDbType }}
        - name: DOLI_DB_HOST
          value: {{ .Values.dolidock.dolidock.doliDbHost }}
        - name: DOLI_DB_HOST_PORT
          value: {{ .Values.dolidock.dolidock.doliDbHostPort }}
        - name: DOLI_URL_ROOT
          value: {{ .Values.dolidock.dolidock.doliUrlRoot }}
        - name: WWW_USER_ID
          value: {{ .Values.dolidock.dolidock.wwwUserId }}
        - name: WWW_GROUP_ID
          value: {{ .Values.dolidock.dolidock.wwwGroupId }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.dolidock.dolidock.image.repository }}:{{ .Values.dolidock.dolidock.image.tag
          | default .Chart.AppVersion }}
        name: dolidock
        ports:
        - containerPort: 80
        resources: {{- toYaml .Values.dolidock.dolidock.resources | nindent 10 }}
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/www/dolidock/documents
          name: dolidock-data
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      restartPolicy: Always
      volumes:
      - name: dolidock-data
        persistentVolumeClaim:
          claimName: dolidock-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
  labels:
    io.kompose.service: phpmyadmin
  {{- include "dolidock.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.phpmyadmin.replicas }}
  selector:
    matchLabels:
      io.kompose.service: phpmyadmin
    {{- include "dolidock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/dolidock-default: "true"
        io.kompose.service: phpmyadmin
      {{- include "dolidock.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: PMA_HOST
          value: {{ .Values.phpmyadmin.phpmyadmin.pmaHost }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.phpmyadmin.phpmyadmin.image.repository }}:{{ .Values.phpmyadmin.phpmyadmin.image.tag
          | default .Chart.AppVersion }}
        name: phpmyadmin
        ports:
        - containerPort: 80
        resources: {{- toYaml .Values.phpmyadmin.phpmyadmin.resources | nindent 10 }}
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crontabui
  labels:
    io.kompose.service: crontabui
  {{- include "dolidock.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.crontabui.replicas }}
  selector:
    matchLabels:
      io.kompose.service: crontabui
    {{- include "dolidock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/dolidock-default: "true"
        io.kompose.service: crontabui
      {{- include "dolidock.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: BASIC_AUTH_USER
          valueFrom:
            secretKeyRef:
              key: crontabui-user
              name: dolistock
        - name: BASIC_AUTH_PWD
          valueFrom:
            secretKeyRef:
              key: crontabui-password
              name: dolistock
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.crontabui.crontabui.image.repository }}:{{ .Values.crontabui.crontabui.image.tag
          | default .Chart.AppVersion }}
        name: crontabui
        ports:
        - containerPort: 8000
        resources: {{- toYaml .Values.crontabui.crontabui.resources | nindent 10 }}
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /opt/cron
          name: crontabui-data
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      restartPolicy: Always
      volumes:
      - name: crontabui-data
        persistentVolumeClaim:
          claimName: crontabui-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dolirate
  labels:
    io.kompose.service: dolirate
  {{- include "dolidock.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.dolirate.replicas }}
  selector:
    matchLabels:
      io.kompose.service: dolirate
    {{- include "dolidock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/dolidock-default: "true"
        io.kompose.service: dolirate
      {{- include "dolidock.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: MYSQL_HOST
          value: {{ .Values.dolirate.dolirate.mysqlHost }}
        - name: MYSQL_PORT
          value: {{ .Values.dolirate.dolirate.mysqlPort }}
        - name: DOLI_DB_USER
          valueFrom:
            secretKeyRef:
              key: DOLI_DB_USER
              name: dolistock
        - name: DOLI_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DOLI_DB_PASSWORD
              name: dolistock
        - name: DOLI_DB_PREFIX
          value: {{ .Values.dolirate.dolirate.doliDbPrefix }}
        - name: DOLI_DB_NAME
          valueFrom:
            secretKeyRef:
              key: DOLI_DB_NAME
              name: dolistock
        - name: API_LAYER_KEY
          valueFrom:
            secretKeyRef:
              key: API_LAYER_KEY
              name: dolistock
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.dolirate.dolirate.image.repository }}:{{ .Values.dolirate.dolirate.image.tag
          | default .Chart.AppVersion }}
        name: dolirate
        ports:
        - containerPort: 3000
        resources: {{- toYaml .Values.dolirate.dolirate.resources | nindent 10 }}
        securityContext:
          runAsGroup: 0
          runAsUser: 0
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  labels:
    io.kompose.service: memcached
  {{- include "dolidock.labels" . | nindent 4 }}
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
spec:
  replicas: {{ .Values.memcached.replicas }}
  selector:
    matchLabels:
      io.kompose.service: memcached
    {{- include "dolidock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/dolidock-default: "true"
        io.kompose.service: memcached
      {{- include "dolidock.selectorLabels" . | nindent 8 }}
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
    spec:
      containers:
      - args:
        - memcached
        - -m
        - "1024"
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.memcached.memcached.image.repository }}:{{ .Values.memcached.memcached.image.tag
          | default .Chart.AppVersion }}
        name: memcached
        ports:
        - containerPort: 11211
        resources: {{- toYaml .Values.memcached.memcached.resources | nindent 10 }}
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      restartPolicy: Always