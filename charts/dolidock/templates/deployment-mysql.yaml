apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    io.kompose.service: mysql
  {{- include "dolidock.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.mysql.replicas }}
  selector:
    matchLabels:
      io.kompose.service: mysql
    {{- include "dolidock.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/dolidock-default: "true"
        io.kompose.service: mysql
      {{- include "dolidock.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_ROOT_PASSWORD
              name: dolidock
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: MYSQL_DATABASE
              name: dolidock
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: MYSQL_USER
              name: dolidock
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MYSQL_PASSWORD
              name: dolidock
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag
          | default .Chart.AppVersion }}
        name: mysql
        ports:
        - containerPort: 3306
        resources: {{- toYaml .Values.mysql.resources | nindent 10 }}
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      restartPolicy: Always
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data